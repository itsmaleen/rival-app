// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  name         String?
  username     String        @unique
  description  String?
  collectibles Collectible[]
  createdAt    DateTime      @default(now())
  links        UserLink[]
  imageUrl     String?

  @@map("users")
}

model Collectible {
  id          Int     @id @default(autoincrement())
  name        String
  imageUrl    String
  grade       String?
  description String?
  condition   String?
  quantity    Int     @default(1)
  wishlist    Boolean @default(false)
  featured    Boolean @default(false)

  owner   User @relation(fields: [ownerId], references: [id])
  ownerId Int

  tags   Tag[]
  images Image[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("collectibles")
}

model Tag {
  id         Int      @id @default(autoincrement())
  name       String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  collectible   Collectible @relation(fields: [collectibleId], references: [id])
  collectibleId Int

  @@map("tags")
}

model Image {
  id       Int    @id @default(autoincrement())
  url      String
  priority Int

  collectible   Collectible @relation(fields: [collectibleId], references: [id])
  collectibleId Int
  createdAt     DateTime    @default(now())

  @@unique([collectibleId, priority])
  @@map("images")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String

  Tag Tag[]

  @@map("categories")
}

model UserLink {
  id     Int    @id @default(autoincrement())
  url    String
  name   String
  user   User   @relation(fields: [userId], references: [id])
  userId Int

  @@map("user_links")
}
